% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simple_slopes.R
\name{simple_slopes}
\alias{simple_slopes}
\title{Get the simple slopes of a SEM model}
\usage{
simple_slopes(
  x,
  z,
  y,
  xz = NULL,
  model,
  vals_x = -3:3,
  vals_z = -1:1,
  rescale = TRUE,
  ci_width = 1.96,
  relative_h0 = TRUE,
  ...
)
}
\arguments{
\item{x}{The name of the variable on the x-axis}

\item{z}{The name of the moderator variable}

\item{y}{The name of the outcome variable}

\item{xz}{The name of the interaction term. If the interaction term is not specified, it}

\item{model}{An object of class \code{\link{modsem_pi}}, \code{\link{modsem_da}}, or \code{\link{modsem_mplus}}
will be created using \code{x} and \code{z}.}

\item{vals_x}{The values of the \code{x} variable to plot, the more values the smoother the std.error-area will be.
NOTE: \code{vals_x} are measured relative to the mean and standard deviation of \code{x} (overridden by \code{rescale=FALSE}). 
The correct values will show up in the plot.}

\item{vals_z}{The values of the moderator variable to plot. A separate regression
NOTE: \code{vals_z} are measured relative to the mean and standard deviation of \code{z} (overridden by \code{rescale=FALSE}). 
The correct values will show up in the plot.
line (\code{y ~ x | z}) will be plotted for each value of the moderator variable}

\item{rescale}{Logical. If \code{TRUE} (default), the values of \code{x} and \code{z} will be rescaled relative to their means and standard deviations.}

\item{ci_width}{The width of the confidence interval (default is 1.96, corresponding to a 95\% confidence interval)}

\item{relative_h0}{Logical. If \code{TRUE} (default), the null hypothesis is that the mean of the outcome variable is equal to the predicted value of the outcome variable. If \code{FALSE}, the null hypothesis is that the outcome variable is equal to zero.}

\item{...}{Additional arguments passed to other functions}
}
\value{
A \code{ggplot} object
}
\description{
Get the simple slopes of a SEM model
}
\examples{
library(modsem)
\dontrun{
m1 <- "
# Outer Model
  X =~ x1
  X =~ x2 + x3
  Z =~ z1 + z2 + z3
  Y =~ y1 + y2 + y3

# Inner model
  Y ~ X + Z + X:Z
"
est1 <- modsem(m1, data = oneInt)
simple_slopes(x = "X", z = "Z", y = "Y", model = est1)
}
}
